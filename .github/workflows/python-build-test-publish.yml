# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: digirock actions

on: [push, pull_request]

jobs:
  build-test:
    name: Build and test dataicer
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python: ["3.8"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          # required for `git describe --tags` to work
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install package and deps
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Run tests
        run: |
          pytest -v

      - name: Build wheels
        run: pip wheel . -w dist --no-deps

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }} Python ${{ matrix.python }} wheel
          path: dist/*

  publish:
    name: Publish to test.PyPI and PyPI
    runs-on: ubuntu-latest
    needs: [build-test]

    steps:
      - name: Get wheels
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Move to dist/
        run: |
          mkdir dist
          find artifacts -name "*.whl" -exec mv '{}' dist/ \;
      - name: Publish package to test.PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
        # If this is a tagged release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
